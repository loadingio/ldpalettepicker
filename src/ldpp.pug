//- module

mixin ldp(name, colors, actions, cls)
  - if(!actions) actions = []
  .ldp(class=(cls || ""))
    .colors
      .ctrl
        each a in actions
          div(data-action=a[0])= a[1]
      each c in colors
        .color(style=`background:${c}`)
    if name
      .name= name

//- Palette Editor
mixin ldpe
  .ldp
    .name
    .colors
  .edit
    .inner
      .row
        .col-sm-6
          .ldcolorpicker.no-border.no-palette
        .col-sm-6
          .row.mb-2
            .col-sm-8
              select.form-control.form-control-local-sm(value="rgb")
                option(value="rgb") RGB
                option(value="hsl") HSL
                option(value="hcl") HCL
            .col-sm-4.pl-0: input.form-control.form-control-local-sm.value(placeholder="Hex Value",data-tag="hex",style="margin:0")
          - var configs = [["Red", "Green", "Blue", "rgb", "active"], ["Hue", "Saturation", "Luminance", "hsl",""], ["Hue", "Chroma", "Luminance", "hcl",""]];
          each config in configs
            .row.config(data-tag=config[3],class=config[4])
              .col-sm-8
                .label-group: span= config[0]
                input.ldrs.sm(
                data-tag=config[3] + "-" + config[0][0].toLowerCase())
                .label-group: span= config[1]
                input.ldrs.sm(
                data-tag=config[3] + "-" + config[1][0].toLowerCase())
                .label-group: span= config[2]
                input.ldrs.sm(
                data-tag=config[3] + "-" + config[2][0].toLowerCase())
              .col-sm-4
                input.value.form-control.form-control-local-sm(
                data-tag=config[3] + "-" + config[0][0].toLowerCase())
                input.value.form-control.form-control-local-sm(
                data-tag=config[3] + "-" + config[1][0].toLowerCase())
                input.value.form-control.form-control-local-sm(
                data-tag=config[3] + "-" + config[2][0].toLowerCase())

//- Palette Picker Widget
mixin ldpp
  .ldpp(ldpp)
    .header(style="display:flex;justify-content:space-between;gap:.5em;flex-wrap:wrap")
      .mb-2(style="white-space:nowrap;flex:3 0 auto;width:10em")
        .input-group
          input.form-control(data-tag="search")
          .input-group-append
            .btn.btn-outline-dark.dropdown-toggle(data-toggle="dropdown"): span(t="filter") &nbsp;
            .dropdown-menu.shadow-sm(data-tag="categories")
              a.dropdown-item(href="#",data-cat=""): span(t="all")
              .dropdown-divider
              a.dropdown-item(href="#",data-cat="artwork"): span(t="artwork")
              a.dropdown-item(href="#",data-cat="brand"): span(t="brand")
              a.dropdown-item(href="#",data-cat="concept"): span(t="concept")
              .dropdown-divider
              a.dropdown-item(href="#",data-cat="gradient"): span(t="gradient")
              a.dropdown-item(href="#",data-cat="qualitative"): span(t="qualitative")
              a.dropdown-item(href="#",data-cat="diverging"): span(t="diverging")
              a.dropdown-item(href="#",data-cat="colorbrew"): span(t="colorbrew")
      div(style="flex:5 0 1px")
      .mb-2(style="display:flex;justify-content:space-between;flex:1 0 auto;width:fit-content;white-space:nowrap")
        .btn.btn-primary(data-panel="view"): span(t="view")
        .btn.btn-text(data-panel="mypal"): span(t="my pals")
        .btn.btn-text(data-panel="edit"): span(t="edit")

    .panels
      .panel.active.clusterize-scroll(data-panel="view",style="max-height:600px"): .inner.clusterize-content
      .panel.clusterize-scroll(data-panel="mypal",style="max-height:600px")
        .inner.clusterize-content
        .btn.btn-primary.btn-block.ld-over-inverse.btn-load
          span(t="load more")
          .ld.ldld.ldbtn.sm
      .panel(data-panel="edit")
        +ldpe
        .foot
          hr
          .float-right
            .btn.btn-primary.mr-2(data-action="use"): span(t="use this palette")
            .btn.btn-outline-secondary.ld-ext-right(data-action="save")
              span(t="save as asset")
              .ld.ldld.ldbtn.sm
          .btn.btn-outline-secondary(data-action="undo") #[span(t="undo")] #[i.i-undo]
